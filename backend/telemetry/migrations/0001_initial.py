# Generated by Django 5.2.1 on 2025-06-12 21:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("bikes", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="RideSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("crashed", "Crashed"),
                            ("interrupted", "Interrupted"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("total_distance", models.FloatField(default=0)),
                ("max_speed", models.FloatField(default=0)),
                ("avg_speed", models.FloatField(default=0)),
                ("max_rpm", models.IntegerField(default=0)),
                ("avg_rpm", models.FloatField(default=0)),
                ("max_lean_angle", models.FloatField(default=0)),
                ("max_acceleration", models.FloatField(default=0)),
                ("max_deceleration", models.FloatField(default=0)),
                ("start_location", models.JSONField(null=True)),
                ("end_location", models.JSONField(null=True)),
                ("route", models.JSONField(null=True)),
                ("hard_braking_count", models.IntegerField(default=0)),
                ("hard_acceleration_count", models.IntegerField(default=0)),
                ("sharp_turn_count", models.IntegerField(default=0)),
                ("safety_score", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "bike",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ride_sessions",
                        to="bikes.motorcycle",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telemetry_ride_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="RideAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("performance_score", models.FloatField(default=0)),
                ("efficiency_score", models.FloatField(default=0)),
                ("smoothness_score", models.FloatField(default=0)),
                ("acceleration_zones", models.JSONField(default=dict)),
                ("speed_zones", models.JSONField(default=dict)),
                ("rpm_zones", models.JSONField(default=dict)),
                ("lean_angle_zones", models.JSONField(default=dict)),
                ("risk_zones", models.JSONField(default=dict)),
                ("safety_events", models.JSONField(default=list)),
                ("recommendations", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ride_session",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="telemetry.ridesession",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TelemetryDataPoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField()),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("altitude", models.FloatField(null=True)),
                ("speed", models.FloatField()),
                ("acceleration", models.FloatField()),
                ("heading", models.FloatField()),
                ("rpm", models.IntegerField()),
                ("throttle_position", models.FloatField()),
                ("brake_pressure", models.FloatField(null=True)),
                ("lean_angle", models.FloatField()),
                ("gear", models.IntegerField(null=True)),
                ("engine_temp", models.FloatField(null=True)),
                ("oil_temp", models.FloatField(null=True)),
                ("oil_pressure", models.FloatField(null=True)),
                ("fuel_level", models.FloatField(null=True)),
                ("raw_data", models.JSONField(null=True)),
                (
                    "ride_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telemetry_points",
                        to="telemetry.ridesession",
                    ),
                ),
            ],
            options={
                "ordering": ["timestamp"],
            },
        ),
        migrations.AddIndex(
            model_name="ridesession",
            index=models.Index(
                fields=["user", "start_time"], name="telemetry_r_user_id_eab13e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ridesession",
            index=models.Index(
                fields=["bike", "start_time"], name="telemetry_r_bike_id_4118b3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ridesession",
            index=models.Index(fields=["status"], name="telemetry_r_status_c40f6d_idx"),
        ),
        migrations.AddIndex(
            model_name="telemetrydatapoint",
            index=models.Index(
                fields=["ride_session", "timestamp"],
                name="telemetry_t_ride_se_585481_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="telemetrydatapoint",
            index=models.Index(
                fields=["timestamp"], name="telemetry_t_timesta_bb85c3_idx"
            ),
        ),
    ]
