# Generated by Django 5.2.1 on 2025-06-12 17:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("bikes", "0001_initial"),
        ("tunes", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="tunecollection",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_collections",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="tunecollectionitem",
            name="collection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tunes.tunecollection"
            ),
        ),
        migrations.AddField(
            model_name="tunecollectionitem",
            name="tune",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tunes.tune"
            ),
        ),
        migrations.AddField(
            model_name="tunecollection",
            name="tunes",
            field=models.ManyToManyField(
                through="tunes.TuneCollectionItem", to="tunes.tune"
            ),
        ),
        migrations.AddField(
            model_name="tunecompatibility",
            name="motorcycle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="bikes.motorcycle"
            ),
        ),
        migrations.AddField(
            model_name="tunecompatibility",
            name="tune",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tunes.tune"
            ),
        ),
        migrations.AddField(
            model_name="tune",
            name="compatible_motorcycles",
            field=models.ManyToManyField(
                related_name="compatible_tunes",
                through="tunes.TuneCompatibility",
                to="bikes.motorcycle",
            ),
        ),
        migrations.AddField(
            model_name="tunecreator",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="creator_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="tune",
            name="creator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tunes",
                to="tunes.tunecreator",
            ),
        ),
        migrations.AddField(
            model_name="tunepurchase",
            name="tune",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchases",
                to="tunes.tune",
            ),
        ),
        migrations.AddField(
            model_name="tunepurchase",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tune_purchases",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="tunedownload",
            name="purchase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="downloads",
                to="tunes.tunepurchase",
            ),
        ),
        migrations.AddField(
            model_name="tunereview",
            name="motorcycle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="bikes.motorcycle"
            ),
        ),
        migrations.AddField(
            model_name="tunereview",
            name="tune",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reviews",
                to="tunes.tune",
            ),
        ),
        migrations.AddField(
            model_name="tunereview",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="tune",
            name="tune_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="tunes.tunetype"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tunecollectionitem",
            unique_together={("collection", "tune")},
        ),
        migrations.AddIndex(
            model_name="tunecollection",
            index=models.Index(
                fields=["collection_type", "is_active"],
                name="tune_collec_collect_5032eb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="tunecollection",
            index=models.Index(
                fields=["is_featured", "display_order"],
                name="tune_collec_is_feat_944b00_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="tunecollection",
            index=models.Index(
                fields=["created_at"], name="tune_collec_created_d229d6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunecompatibility",
            index=models.Index(
                fields=["tune", "is_verified"], name="tune_compat_tune_id_dc15bc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunecompatibility",
            index=models.Index(
                fields=["motorcycle", "testing_status"],
                name="tune_compat_motorcy_7892e8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="tunecompatibility",
            index=models.Index(
                fields=["testing_status"], name="tune_compat_testing_4c6da7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tunecompatibility",
            unique_together={("tune", "motorcycle")},
        ),
        migrations.AddIndex(
            model_name="tunecreator",
            index=models.Index(
                fields=["is_verified"], name="tune_creato_is_veri_5da83b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunecreator",
            index=models.Index(
                fields=["verification_level"], name="tune_creato_verific_bf4dfa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunecreator",
            index=models.Index(
                fields=["average_rating"], name="tune_creato_average_3168b5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunecreator",
            index=models.Index(
                fields=["total_downloads"], name="tune_creato_total_d_13c0ab_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunepurchase",
            index=models.Index(
                fields=["user", "payment_status"], name="tune_purcha_user_id_d0a3ff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunepurchase",
            index=models.Index(
                fields=["tune", "created_at"], name="tune_purcha_tune_id_0323b5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunepurchase",
            index=models.Index(
                fields=["transaction_id"], name="tune_purcha_transac_843a7b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunepurchase",
            index=models.Index(
                fields=["expires_at"], name="tune_purcha_expires_ca8f93_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunepurchase",
            index=models.Index(
                fields=["payment_status"], name="tune_purcha_payment_bbd611_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tunepurchase",
            unique_together={("tune", "user", "purchase_type")},
        ),
        migrations.AddIndex(
            model_name="tunedownload",
            index=models.Index(
                fields=["purchase", "download_type"],
                name="tune_downlo_purchas_287893_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="tunedownload",
            index=models.Index(fields=["status"], name="tune_downlo_status_a6809d_idx"),
        ),
        migrations.AddIndex(
            model_name="tunedownload",
            index=models.Index(
                fields=["created_at"], name="tune_downlo_created_9d5949_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunedownload",
            index=models.Index(
                fields=["ip_address"], name="tune_downlo_ip_addr_576dc7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunereview",
            index=models.Index(
                fields=["tune", "is_approved"], name="tune_review_tune_id_b650e3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunereview",
            index=models.Index(
                fields=["overall_rating"], name="tune_review_overall_84b200_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunereview",
            index=models.Index(
                fields=["is_verified_purchase"], name="tune_review_is_veri_956788_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunereview",
            index=models.Index(
                fields=["helpful_count"], name="tune_review_helpful_e9243f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tunereview",
            index=models.Index(
                fields=["created_at"], name="tune_review_created_36bbb7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tunereview",
            unique_together={("tune", "user")},
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(
                fields=["creator", "status"], name="tunes_creator_91b6fa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(
                fields=["category", "pricing_type"], name="tunes_categor_f97949_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(
                fields=["safety_rating", "is_featured"], name="tunes_safety__03870c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(
                fields=["download_count"], name="tunes_downloa_765a1e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(
                fields=["average_rating"], name="tunes_average_484eb4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(
                fields=["published_at"], name="tunes_publish_50f5f2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(fields=["price"], name="tunes_price_44b1f3_idx"),
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(
                fields=["is_track_only"], name="tunes_is_trac_4d4d2d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(fields=["dyno_tested"], name="tunes_dyno_te_8b77a9_idx"),
        ),
        migrations.AddIndex(
            model_name="tune",
            index=models.Index(
                fields=["street_legal"], name="tunes_street__82ecea_idx"
            ),
        ),
    ]
